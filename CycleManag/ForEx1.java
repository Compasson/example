package CycleManag;

public class ForEx1 {

	public static void main(String[] args) {
		/*
		 * for (инициализация; условие; повторение) {
		 *      // тело
		 * }
		 *  Используя запятые, можно использовать 2 и более переменные
		 *     для управления циклом.
		 *  
		 */
		int a, b;
		
		for (a=1, b=4; a<b; a++, b--) {
			System.out.println("a = " + a);
			System.out.println("b = " + b);
		}
		/*
		 * Инициализация и повторения могут отсутствовать
		 */
		int i;
		boolean done = false;
		
		i =0;
		for ( ; !done; ) {
			System.out.println("i = " + i);
			if(i == 10) done = true;
			i++;
		}
		/*
		 * Можно создать бесконечный цикл.
		 * Остановить его будет можно особыми условиями прерывания.
		 * for( ; ;){
		 * }
		 */
		/*
		 * Цикл for-each
		 * 
		 *    for(тип итер_пер. : коллекция) блок_операторов.
		 *    
		 *    итер_пер. - будет последовательно принимать значения из коллекции
		 *    
		 *    break; - в любой момент цикл можно остановить
		 */
		int nums[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		int sum = 0;
		
		for(int x: nums){
			System.out.println("Значение равно: " + x);
			sum += x;
			if(x == 5) break; // Прекращение цикла после получения значения переменной равной 5.
		}
		System.out.println("Сумма рана: " + sum);
		/*
		 * FOR в стиле for-each для многомерногомассива
		 *    Перебор двуерного массива является последовательным перебором одномерных массивов перебором
		 *    Итерационная переменная должна иметь совместимый тип.
		 */
		int summ = 0;
		int numss[][] = new int[3][5];
		
		for(int k = 0; k < 3; k++)
			for(int j = 0; j < 5; j++)
				numss[k][j] = (k+1)*(j+1);
		
		for(int x[] : numss) {
			for(int y : x) {
				System.out.println("Значение равно: " + y);
				summ += y;
			}
		}
		System.out.println("Сумма: " + summ);

		



	}

}
